
&НаКлиенте
Процедура ПрочитатьФайл(Команда)

	Если ЭтаФорма.СырыеДанные.Количество()>0 Тогда
		
		Если Вопрос("Таблица данных будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Диалог = новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = НСтр("ru = 'CSV'; en = 'CSV'") + "(*.csv)|*.csv";
	Диалог.МножественныйВыбор = Ложь;
	Если НЕ Диалог.Выбрать() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ЭтаФорма.СырыеДанные.Очистить();
	ЭтаФорма.ОбработанныеДанные.Очистить();
	
	ЧтениеТекста = новый ЧтениеТекста;
	ЧтениеТекста.Открыть(Диалог.ПолноеИмяФайла, "windows-1251");
	
	МассивДанных = новый Массив();
	
	СимволРазделитель = ",";
	
	Пока Истина Цикл
		
		Стр = ЧтениеТекста.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;
		
		МассивПодстрок = новый Массив();
		МассивПодстрок.Добавить(Лев(Стр, Найти(Стр, СимволРазделитель)-1));
		МассивПодстрок.Добавить(Прав(Стр, СтрДлина(Стр)-Найти(Стр,СимволРазделитель)));
		
		Д = новый Структура("ДатаВремя,Значение", неопределено, неопределено);
		
		МассивДанных.Добавить( СтруктураДанных(Число(МассивПодстрок[0]), Число(МассивПодстрок[1])) );
		
	КонецЦикла;
	
	МассивСокращенныхДанных = ПрименитьМетодДугласаПойкера(МассивДанных, ЭтаФорма.Погрешность);
	Для каждого Эл ИЗ МассивСокращенныхДанных Цикл
		
		НоваяСтрока = ЭтаФорма.ОбработанныеДанные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Эл);
		
	КонецЦикла;
	
	ИндексЭлементаСокращенныхДанных = 0;
	Для каждого ЭЛ Из МассивДанных Цикл
		
		НоваяСтрока = ЭтаФорма.СырыеДанные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Эл);
		
		Если Эл.ДатаВремя = МассивСокращенныхДанных[ИндексЭлементаСокращенныхДанных+1].ДатаВремя Тогда
			ИндексЭлементаСокращенныхДанных = ИндексЭлементаСокращенныхДанных + 1;
		КонецЕсли;
		
		Если Эл.ДатаВремя = МассивСокращенныхДанных[ИндексЭлементаСокращенныхДанных].ДатаВремя Тогда
			
			НоваяСтрока.Приближение = МассивСокращенныхДанных[ИндексЭлементаСокращенныхДанных].Значение;
			НоваяСтрока.ТочноеЗначение = Истина;
			
		Иначе
			
			НоваяСтрока.Приближение = МассивСокращенныхДанных[ИндексЭлементаСокращенныхДанных].Значение + 
				(НоваяСтрока.ДатаВремя - МассивСокращенныхДанных[ИндексЭлементаСокращенныхДанных].ДатаВремя)*(МассивСокращенныхДанных[ИндексЭлементаСокращенныхДанных+1].Значение - МассивСокращенныхДанных[ИндексЭлементаСокращенныхДанных].Значение)/
				(МассивСокращенныхДанных[ИндексЭлементаСокращенныхДанных+1].ДатаВремя - МассивСокращенныхДанных[ИндексЭлементаСокращенныхДанных].ДатаВремя);
				
			НоваяСтрока.Погрешность = НоваяСтрока.Значение - НоваяСтрока.Приближение; 
						
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Функция - Применить метод дугласа пойкера
//
// Параметры:
//  МассивДанных - Массив	- Массив структур данных с полями ДатаВремя,Значение. Поля структуры целочисленые значения. Упорядочено по ДатаВремя
//  Погрешность	 - Число	- Целое Положительное.
// 
// Возвращаемое значение:
//   - МассивДанных с удаленными "ненужными" столбцами.
//
&НаКлиенте
Функция ПрименитьМетодДугласаПойкера(МассивДанных, Погрешность)

	Результат = новый Массив();
	
	МассивОтрезков = новый Массив();
	МассивОтрезков.Добавить(новый Структура("Начало,Конец", 0, МассивДанных.Количество()));	
	
	ВставитьДанныеВРезультат(Результат, МассивДанных[0]);
	ВставитьДанныеВРезультат(Результат, МассивДанных[МассивДанных.Количество()-1]);
		
	Пока МассивОтрезков.Количество()>0 Цикл
		
		Отрезок = МассивОтрезков[МассивОтрезков.Количество()-1];
		МассивОтрезков.Удалить(МассивОтрезков.Количество()-1);
		
		ц=Отрезок.Начало+1;
		МаксДельта = Погрешность;
		МаксЦ = неопределено;
		Пока ц < Отрезок.Конец Цикл
			
			ПрогнозируемоеЗначение = МассивДанных[Отрезок.Начало].Значение + 
				(МассивДанных[ц].ДатаВремя - МассивДанных[Отрезок.Начало].ДатаВремя)*(МассивДанных[Отрезок.Конец-1].Значение - МассивДанных[Отрезок.Начало].Значение)/
				(МассивДанных[Отрезок.Конец-1].ДатаВремя - МассивДанных[Отрезок.Начало].ДатаВремя);
				
			Дельта = Макс(ПрогнозируемоеЗначение-МассивДанных[ц].Значение, МассивДанных[ц].Значение-ПрогнозируемоеЗначение);
			Если Дельта > МаксДельта Тогда
				
				МаксЦ = ц;
				МаксДельта = Дельта;
				
			КонецЕсли;
			
			ц = ц + 1;
			
		КонецЦикла;
		
		Если МаксЦ<>Неопределено Тогда
			
			МассивОтрезков.Добавить( новый Структура("Начало,Конец", Отрезок.Начало, МаксЦ+1) );
			МассивОтрезков.Добавить( новый Структура("Начало,Конец", МаксЦ, Отрезок.Конец) );
			
			ВставитьДанныеВРезультат(Результат, МассивДанных[МаксЦ]);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция СтруктураДанных(ДатаВремя, Значение)
	
	Возврат новый Структура("ДатаВремя,Значение", ДатаВремя, Значение);
	
КонецФункции

&НаКлиенте
Процедура ВставитьДанныеВРезультат(Результат, Данные)
	
	Для ц=0 По Результат.Количество()-1 Цикл
		
		Если Результат[ц].ДатаВремя = Данные.ДатаВремя Тогда
			Возврат;
		ИначеЕсли Результат[ц].ДатаВремя > Данные.ДатаВремя Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Результат.Вставить(ц, Данные); 
	
КонецПроцедуры

